import telebot
from datetime import datetime, timedelta
import threading
from telebot import types

# –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
API_TOKEN = '7839517122:AAH0zdxFuoGDOWswOzmqZr-_CUigO-FuVf8'
bot = telebot.TeleBot(API_TOKEN)

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
users_subscriptions = {}

# –ù–æ–º–µ—Ä–∞ –∏ —Å—É–º–º—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–¥–ø–∏—Å–æ–∫
payment_details = {
    '3_months': {'number': '2200700770011574', 'amount': 349, 'photo': '3.jpg'},  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è 3 –º–µ—Å—è—Ü–µ–≤
    '6_months': {'number': '2200700770011574', 'amount': 590, 'photo': '6.jpg'},  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è 6 –º–µ—Å—è—Ü–µ–≤
    '12_months': {'number': '2200700770011574', 'amount': 890, 'photo': '12.jpg'},  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è 12 –º–µ—Å—è—Ü–µ–≤
    '24_months': {'number': '2200700770011574', 'amount': 1190, 'photo': '24.jpg'},  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è 24 –º–µ—Å—è—Ü–µ–≤
}


# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_3_months = types.KeyboardButton("–Ω–∞ 3 –º–µ—Å—è—Ü–∞")
    btn_6_months = types.KeyboardButton("–Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤")
    btn_12_months = types.KeyboardButton("–Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤")
    btn_24_months = types.KeyboardButton("–Ω–∞ 24 –º–µ—Å—è—Ü–∞")
    markup.add(btn_3_months, btn_6_months, btn_12_months, btn_24_months)
    first_name = message.from_user.first_name

    bot.send_message(message.chat.id, f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {first_name}! –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –Ø–Ω–¥–µ–∫—Å –ü–ª—é—Å:", reply_markup=markup)
    bot.register_next_step_handler(message, choose_subscription)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–¥–ø–∏—Å–∫–∏
def choose_subscription(message):
    subscription = message.text.strip().lower()

    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∫–ª—é—á–∞–º —Å–ª–æ–≤–∞—Ä—è
    if subscription == "–Ω–∞ 3 –º–µ—Å—è—Ü–∞":
        subscription_type = '3_months'
    elif subscription == "–Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤":
        subscription_type = '6_months'
    elif subscription == "–Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤":
        subscription_type = '12_months'
    elif subscription == "–Ω–∞ 24 –º–µ—Å—è—Ü–∞":
        subscription_type = '24_months'
    else:
        bot.send_message(message.chat.id,
                         "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ: –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 3 –º–µ—Å—è—Ü–∞, 6 –º–µ—Å—è—Ü–µ–≤, 12 –º–µ—Å—è—Ü–µ–≤ –∏–ª–∏ 24 –º–µ—Å—è—Ü–∞.")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ
    users_subscriptions[message.chat.id] = {
        'subscription': subscription_type,
        'payment_link': f"https://t.me/stariysilva",  # –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã
        'purchase_date': datetime.now()
    }

    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –∏ —Å—É–º–º—É –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
    payment_info = payment_details[subscription_type]
    number = payment_info['number']
    amount = payment_info['amount']
    photo_path = payment_info['photo']  # –ü—É—Ç—å –∫ —Ñ–æ—Ç–æ .jpg

    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
    markup = types.ReplyKeyboardRemove()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä –∏ —Å—É–º–º—É –¥–ª—è –æ–ø–ª–∞—Ç—ã —Å —Ñ–æ—Ç–æ
    bot.send_message(message.chat.id,
                     f"üî¥ –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É {subscription}. –î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {amount} —Ä—É–±–ª–µ–π –ø–æ —ç—Ç–∏–º —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º {number}.",
                     reply_markup=markup)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ (–ø—É—Ç—å –∫ —Ñ–∞–π–ª—É .jpg)
    with open(photo_path, 'rb') as photo_file:
        bot.send_photo(message.chat.id, photo_file)

    bot.send_message(message.chat.id, "üî¥ –ü—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω –æ–ø–ª–∞—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É(@Yandex_Family_Assistant) –∏ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–∏—à–ª–µ—Ç –≤–∞–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ")

    # –ù–∞—Å—Ç—Ä–æ–∏–º –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –∫–æ–Ω—Ü–µ –ø–æ–¥–ø–∏—Å–∫–∏
    schedule_subscription_expiry(message.chat.id)

    # –ü—Ä–µ–¥–ª–æ–∂–∏–º –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
    bot.send_message(message.chat.id, "‚û°Ô∏è –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
def schedule_subscription_expiry(user_id):
    if user_id not in users_subscriptions:
        return

    subscription_data = users_subscriptions[user_id]
    subscription_type = subscription_data['subscription']
    purchase_date = subscription_data['purchase_date']

    if subscription_type == '3_months':
        expiry_date = purchase_date + timedelta(days=90)
    elif subscription_type == '6_months':
        expiry_date = purchase_date + timedelta(days=180)
    elif subscription_type == '12_months':
        expiry_date = purchase_date + timedelta(days=365)
    elif subscription_type == '24_months':
        expiry_date = purchase_date + timedelta(days=730)

    # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ (–∑–∞ –Ω–µ–¥–µ–ª—é)
    reminder_time = expiry_date - timedelta(days=7)

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞ –Ω–µ–¥–µ–ª—é –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    now = datetime.now()
    time_to_reminder = (reminder_time - now).total_seconds()

    if time_to_reminder > 0:
        threading.Timer(time_to_reminder, send_expiry_reminder, [user_id, expiry_date]).start()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
def send_expiry_reminder(user_id, expiry_date):
    bot.send_message(user_id,
                     f"–í–Ω–∏–º–∞–Ω–∏–µ! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å –ü–ª—é—Å –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é ({expiry_date.strftime('%d-%m-%Y')}). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–ª–∏—Ç–µ –µ–µ!")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    bot.polling(none_stop=True)
